<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="conf.mybatis.mapper.UsersMapper">
  <resultMap id="BaseResultMap" type="com.tcmkb.model.Users">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="pass" jdbcType="VARCHAR" property="pass" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mobile" jdbcType="BIGINT" property="mobile" />
    <result column="group_id" jdbcType="SMALLINT" property="groupId" />
    <result column="regIP" jdbcType="VARCHAR" property="regip" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="affiliation" jdbcType="VARCHAR" property="affiliation" />
    <result column="job" jdbcType="VARCHAR" property="job" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="create_time" jdbcType="INTEGER" property="createTime" />
    <result column="create_ip" jdbcType="INTEGER" property="createIp" />
    <result column="create_os" jdbcType="BIT" property="createOs" />
    <result column="login_time" jdbcType="INTEGER" property="loginTime" />
    <result column="login_ip" jdbcType="INTEGER" property="loginIp" />
    <result column="login_os" jdbcType="BIT" property="loginOs" />
    <result column="dt" jdbcType="TIMESTAMP" property="dt" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="email_status" jdbcType="BIT" property="emailStatus" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.tcmkb.model.UsersWithBLOBs">
    <result column="roles" jdbcType="LONGVARCHAR" property="roles" />
    <result column="profile" jdbcType="LONGVARCHAR" property="profile" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account, pass, email, mobile, group_id, regIP, score, real_name, affiliation, 
    job, icon, create_time, create_ip, create_os, login_time, login_ip, login_os, dt, 
    status, email_status
  </sql>
  <sql id="Blob_Column_List">
    roles, profile
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.tcmkb.model.UsersExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.tcmkb.model.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from users
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tcmkb.model.UsersExample">
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tcmkb.model.UsersWithBLOBs">
    insert into users (id, account, pass, 
      email, mobile, group_id, 
      regIP, score, real_name, 
      affiliation, job, icon, 
      create_time, create_ip, create_os, 
      login_time, login_ip, login_os, 
      dt, status, email_status, 
      roles, profile)
    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{pass,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{mobile,jdbcType=BIGINT}, #{groupId,jdbcType=SMALLINT}, 
      #{regip,jdbcType=VARCHAR}, #{score,jdbcType=INTEGER}, #{realName,jdbcType=VARCHAR}, 
      #{affiliation,jdbcType=VARCHAR}, #{job,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=INTEGER}, #{createIp,jdbcType=INTEGER}, #{createOs,jdbcType=BIT}, 
      #{loginTime,jdbcType=INTEGER}, #{loginIp,jdbcType=INTEGER}, #{loginOs,jdbcType=BIT}, 
      #{dt,jdbcType=TIMESTAMP}, #{status,jdbcType=BIT}, #{emailStatus,jdbcType=BIT}, 
      #{roles,jdbcType=LONGVARCHAR}, #{profile,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tcmkb.model.UsersWithBLOBs">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="pass != null">
        pass,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="regip != null">
        regIP,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="affiliation != null">
        affiliation,
      </if>
      <if test="job != null">
        job,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createIp != null">
        create_ip,
      </if>
      <if test="createOs != null">
        create_os,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="loginIp != null">
        login_ip,
      </if>
      <if test="loginOs != null">
        login_os,
      </if>
      <if test="dt != null">
        dt,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="emailStatus != null">
        email_status,
      </if>
      <if test="roles != null">
        roles,
      </if>
      <if test="profile != null">
        profile,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="pass != null">
        #{pass,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=BIGINT},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=SMALLINT},
      </if>
      <if test="regip != null">
        #{regip,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="affiliation != null">
        #{affiliation,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="createIp != null">
        #{createIp,jdbcType=INTEGER},
      </if>
      <if test="createOs != null">
        #{createOs,jdbcType=BIT},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=INTEGER},
      </if>
      <if test="loginIp != null">
        #{loginIp,jdbcType=INTEGER},
      </if>
      <if test="loginOs != null">
        #{loginOs,jdbcType=BIT},
      </if>
      <if test="dt != null">
        #{dt,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="emailStatus != null">
        #{emailStatus,jdbcType=BIT},
      </if>
      <if test="roles != null">
        #{roles,jdbcType=LONGVARCHAR},
      </if>
      <if test="profile != null">
        #{profile,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tcmkb.model.UsersExample" resultType="java.lang.Long">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update users
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.pass != null">
        pass = #{record.pass,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=BIGINT},
      </if>
      <if test="record.groupId != null">
        group_id = #{record.groupId,jdbcType=SMALLINT},
      </if>
      <if test="record.regip != null">
        regIP = #{record.regip,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.affiliation != null">
        affiliation = #{record.affiliation,jdbcType=VARCHAR},
      </if>
      <if test="record.job != null">
        job = #{record.job,jdbcType=VARCHAR},
      </if>
      <if test="record.icon != null">
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.createIp != null">
        create_ip = #{record.createIp,jdbcType=INTEGER},
      </if>
      <if test="record.createOs != null">
        create_os = #{record.createOs,jdbcType=BIT},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=INTEGER},
      </if>
      <if test="record.loginIp != null">
        login_ip = #{record.loginIp,jdbcType=INTEGER},
      </if>
      <if test="record.loginOs != null">
        login_os = #{record.loginOs,jdbcType=BIT},
      </if>
      <if test="record.dt != null">
        dt = #{record.dt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.emailStatus != null">
        email_status = #{record.emailStatus,jdbcType=BIT},
      </if>
      <if test="record.roles != null">
        roles = #{record.roles,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.profile != null">
        profile = #{record.profile,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update users
    set id = #{record.id,jdbcType=INTEGER},
      account = #{record.account,jdbcType=VARCHAR},
      pass = #{record.pass,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=BIGINT},
      group_id = #{record.groupId,jdbcType=SMALLINT},
      regIP = #{record.regip,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=INTEGER},
      real_name = #{record.realName,jdbcType=VARCHAR},
      affiliation = #{record.affiliation,jdbcType=VARCHAR},
      job = #{record.job,jdbcType=VARCHAR},
      icon = #{record.icon,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=INTEGER},
      create_ip = #{record.createIp,jdbcType=INTEGER},
      create_os = #{record.createOs,jdbcType=BIT},
      login_time = #{record.loginTime,jdbcType=INTEGER},
      login_ip = #{record.loginIp,jdbcType=INTEGER},
      login_os = #{record.loginOs,jdbcType=BIT},
      dt = #{record.dt,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=BIT},
      email_status = #{record.emailStatus,jdbcType=BIT},
      roles = #{record.roles,jdbcType=LONGVARCHAR},
      profile = #{record.profile,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update users
    set id = #{record.id,jdbcType=INTEGER},
      account = #{record.account,jdbcType=VARCHAR},
      pass = #{record.pass,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=BIGINT},
      group_id = #{record.groupId,jdbcType=SMALLINT},
      regIP = #{record.regip,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=INTEGER},
      real_name = #{record.realName,jdbcType=VARCHAR},
      affiliation = #{record.affiliation,jdbcType=VARCHAR},
      job = #{record.job,jdbcType=VARCHAR},
      icon = #{record.icon,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=INTEGER},
      create_ip = #{record.createIp,jdbcType=INTEGER},
      create_os = #{record.createOs,jdbcType=BIT},
      login_time = #{record.loginTime,jdbcType=INTEGER},
      login_ip = #{record.loginIp,jdbcType=INTEGER},
      login_os = #{record.loginOs,jdbcType=BIT},
      dt = #{record.dt,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=BIT},
      email_status = #{record.emailStatus,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tcmkb.model.UsersWithBLOBs">
    update users
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="pass != null">
        pass = #{pass,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=BIGINT},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=SMALLINT},
      </if>
      <if test="regip != null">
        regIP = #{regip,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="affiliation != null">
        affiliation = #{affiliation,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="createIp != null">
        create_ip = #{createIp,jdbcType=INTEGER},
      </if>
      <if test="createOs != null">
        create_os = #{createOs,jdbcType=BIT},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=INTEGER},
      </if>
      <if test="loginIp != null">
        login_ip = #{loginIp,jdbcType=INTEGER},
      </if>
      <if test="loginOs != null">
        login_os = #{loginOs,jdbcType=BIT},
      </if>
      <if test="dt != null">
        dt = #{dt,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="emailStatus != null">
        email_status = #{emailStatus,jdbcType=BIT},
      </if>
      <if test="roles != null">
        roles = #{roles,jdbcType=LONGVARCHAR},
      </if>
      <if test="profile != null">
        profile = #{profile,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.tcmkb.model.UsersWithBLOBs">
    update users
    set account = #{account,jdbcType=VARCHAR},
      pass = #{pass,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=BIGINT},
      group_id = #{groupId,jdbcType=SMALLINT},
      regIP = #{regip,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      real_name = #{realName,jdbcType=VARCHAR},
      affiliation = #{affiliation,jdbcType=VARCHAR},
      job = #{job,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER},
      create_ip = #{createIp,jdbcType=INTEGER},
      create_os = #{createOs,jdbcType=BIT},
      login_time = #{loginTime,jdbcType=INTEGER},
      login_ip = #{loginIp,jdbcType=INTEGER},
      login_os = #{loginOs,jdbcType=BIT},
      dt = #{dt,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=BIT},
      email_status = #{emailStatus,jdbcType=BIT},
      roles = #{roles,jdbcType=LONGVARCHAR},
      profile = #{profile,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tcmkb.model.Users">
    update users
    set account = #{account,jdbcType=VARCHAR},
      pass = #{pass,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=BIGINT},
      group_id = #{groupId,jdbcType=SMALLINT},
      regIP = #{regip,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      real_name = #{realName,jdbcType=VARCHAR},
      affiliation = #{affiliation,jdbcType=VARCHAR},
      job = #{job,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER},
      create_ip = #{createIp,jdbcType=INTEGER},
      create_os = #{createOs,jdbcType=BIT},
      login_time = #{loginTime,jdbcType=INTEGER},
      login_ip = #{loginIp,jdbcType=INTEGER},
      login_os = #{loginOs,jdbcType=BIT},
      dt = #{dt,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=BIT},
      email_status = #{emailStatus,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>